From 1d55653d6f2763e8dc6debdd176a371ab59f6a4c Mon Sep 17 00:00:00 2001
From: Lorenz Brun <lorenz@monogon.tech>
Date: Mon, 7 Jul 2025 12:09:28 +0200
Subject: [PATCH] add LoggerBuilder override

Implement LoggerBuilder override in etcd integration library. That library is
generally not designed to be consumed by outside code, and we should migrate
off of it instead. But that's a future Monogon problem.

Co-authored-by: Serge Bazanski <serge@monogon.tech>
---
 tests/framework/integration/cluster.go | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/tests/framework/integration/cluster.go b/tests/framework/integration/cluster.go
index 8b0f2b549..c3f62a8db 100644
--- a/framework/integration/cluster.go
+++ b/framework/integration/cluster.go
@@ -177,6 +177,8 @@ type ClusterConfig struct {
 	DisableStrictReconfigCheck  bool
 	CorruptCheckTime            time.Duration
 	Metrics                     string
+
+	LoggerBuilder func(memberName string) *zap.Logger
 }
 
 type Cluster struct {
@@ -295,6 +297,7 @@ func (c *Cluster) MustNewMember(t testutil.TB) *Member {
 			DisableStrictReconfigCheck:  c.Cfg.DisableStrictReconfigCheck,
 			CorruptCheckTime:            c.Cfg.CorruptCheckTime,
 			Metrics:                     c.Cfg.Metrics,
+			LoggerBuilder:               c.Cfg.LoggerBuilder,
 		})
 	m.DiscoveryURL = c.Cfg.DiscoveryURL
 	return m
@@ -621,6 +624,7 @@ type MemberConfig struct {
 	DisableStrictReconfigCheck  bool
 	CorruptCheckTime            time.Duration
 	Metrics                     string
+	LoggerBuilder               func(memberName string) *zap.Logger
 }
 
 // MustNewMember return an inited member with the given name. If peerTLS is
@@ -737,7 +741,11 @@ func MustNewMember(t testutil.TB, mcfg MemberConfig) *Member {
 	m.V2Deprecation = config.V2_DEPR_DEFAULT
 	m.GRPCServerRecorder = &grpctesting.GRPCRecorder{}
 
-	m.Logger, m.LogObserver = memberLogger(t, mcfg.Name)
+	if mcfg.LoggerBuilder != nil {
+		m.Logger = mcfg.LoggerBuilder(mcfg.Name)
+	} else {
+		m.Logger, m.LogObserver = memberLogger(t, mcfg.Name)
+	}
 	m.ServerFeatureGate = features.NewDefaultServerFeatureGate(m.Name, m.Logger)
 	featureGates := fmt.Sprintf("LeaseCheckpoint=%v,LeaseCheckpointPersist=%v", mcfg.EnableLeaseCheckpoint, mcfg.LeaseCheckpointPersist)
 	if err := m.ServerFeatureGate.(featuregate.MutableFeatureGate).Set(featureGates); err != nil {
-- 
2.49.0

